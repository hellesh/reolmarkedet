// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ReolMarkedet.DataAccess.Context;

#nullable disable

namespace ReolMarkedet.DataAccess.Migrations
{
    [DbContext(typeof(ReolMarkedetDbContext))]
    partial class ReolMarkedetDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BarcodeSale", b =>
                {
                    b.Property<int>("BarcodesbarcodeInNumbers")
                        .HasColumnType("int");

                    b.Property<int>("SalessaleId")
                        .HasColumnType("int");

                    b.HasKey("BarcodesbarcodeInNumbers", "SalessaleId");

                    b.HasIndex("SalessaleId");

                    b.ToTable("BarcodeSale");
                });

            modelBuilder.Entity("ReolMarkedet.Domain.Entities.Barcode", b =>
                {
                    b.Property<int>("barcodeInNumbers")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("barcodeInNumbers"));

                    b.Property<int>("ShelfTenanttenantId")
                        .HasColumnType("int");

                    b.Property<double>("discountInPercentage")
                        .HasColumnType("float");

                    b.HasKey("barcodeInNumbers");

                    b.HasIndex("ShelfTenanttenantId");

                    b.ToTable("Barcodes");

                    b.HasData(
                        new
                        {
                            barcodeInNumbers = 1,
                            ShelfTenanttenantId = 1,
                            discountInPercentage = 0.0
                        },
                        new
                        {
                            barcodeInNumbers = 2,
                            ShelfTenanttenantId = 1,
                            discountInPercentage = 15.0
                        },
                        new
                        {
                            barcodeInNumbers = 3,
                            ShelfTenanttenantId = 1,
                            discountInPercentage = 50.0
                        });
                });

            modelBuilder.Entity("ReolMarkedet.Domain.Entities.Payout", b =>
                {
                    b.Property<int>("payoutId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("payoutId"));

                    b.Property<int>("ShelfTenanttenantId")
                        .HasColumnType("int");

                    b.Property<double>("commission")
                        .HasColumnType("float");

                    b.Property<double>("commissionDeduction")
                        .HasColumnType("float");

                    b.Property<double>("fine")
                        .HasColumnType("float");

                    b.Property<double>("totalPayout")
                        .HasColumnType("float");

                    b.Property<double>("totalSale")
                        .HasColumnType("float");

                    b.HasKey("payoutId");

                    b.HasIndex("ShelfTenanttenantId");

                    b.ToTable("Payouts");

                    b.HasData(
                        new
                        {
                            payoutId = 1,
                            ShelfTenanttenantId = 1,
                            commission = 0.0,
                            commissionDeduction = 0.0,
                            fine = 0.0,
                            totalPayout = 0.0,
                            totalSale = 0.0
                        },
                        new
                        {
                            payoutId = 2,
                            ShelfTenanttenantId = 1,
                            commission = 0.0,
                            commissionDeduction = 0.0,
                            fine = 350.0,
                            totalPayout = 0.0,
                            totalSale = 0.0
                        },
                        new
                        {
                            payoutId = 3,
                            ShelfTenanttenantId = 1,
                            commission = 150.0,
                            commissionDeduction = 150.0,
                            fine = 0.0,
                            totalPayout = 850.0,
                            totalSale = 1000.0
                        });
                });

            modelBuilder.Entity("ReolMarkedet.Domain.Entities.Sale", b =>
                {
                    b.Property<int>("saleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("saleId"));

                    b.Property<int>("barcodeInNumbers")
                        .HasColumnType("int");

                    b.Property<double>("discountInPercentage")
                        .HasColumnType("float");

                    b.Property<double>("price")
                        .HasColumnType("float");

                    b.Property<double>("priceOfSale")
                        .HasColumnType("float");

                    b.HasKey("saleId");

                    b.ToTable("Sales");

                    b.HasData(
                        new
                        {
                            saleId = 1,
                            barcodeInNumbers = 1,
                            discountInPercentage = 0.0,
                            price = 100.0,
                            priceOfSale = 100.0
                        },
                        new
                        {
                            saleId = 2,
                            barcodeInNumbers = 2,
                            discountInPercentage = 50.0,
                            price = 50.0,
                            priceOfSale = 25.0
                        },
                        new
                        {
                            saleId = 3,
                            barcodeInNumbers = 3,
                            discountInPercentage = 0.0,
                            price = 150.0,
                            priceOfSale = 150.0
                        });
                });

            modelBuilder.Entity("ReolMarkedet.Domain.Entities.ShelfTenant", b =>
                {
                    b.Property<int>("tenantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("tenantId"));

                    b.Property<string>("bankAccountDetails")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("totalSale")
                        .HasColumnType("float");

                    b.HasKey("tenantId");

                    b.ToTable("Shelftenants");

                    b.HasData(
                        new
                        {
                            tenantId = 1,
                            bankAccountDetails = "",
                            email = "chuck@norris.dk",
                            firstName = "Chuck",
                            lastName = "Norris",
                            phone = "12345678",
                            totalSale = 0.0
                        },
                        new
                        {
                            tenantId = 2,
                            bankAccountDetails = "",
                            email = "ch@ris.dk",
                            firstName = "Chris",
                            lastName = "Chrissie",
                            phone = "23456789",
                            totalSale = 0.0
                        },
                        new
                        {
                            tenantId = 3,
                            bankAccountDetails = "",
                            email = "hmm@mmm.dk",
                            firstName = "Cri",
                            lastName = "sti",
                            phone = "34567890",
                            totalSale = 0.0
                        });
                });

            modelBuilder.Entity("BarcodeSale", b =>
                {
                    b.HasOne("ReolMarkedet.Domain.Entities.Barcode", null)
                        .WithMany()
                        .HasForeignKey("BarcodesbarcodeInNumbers")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ReolMarkedet.Domain.Entities.Sale", null)
                        .WithMany()
                        .HasForeignKey("SalessaleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ReolMarkedet.Domain.Entities.Barcode", b =>
                {
                    b.HasOne("ReolMarkedet.Domain.Entities.ShelfTenant", "ShelfTenant")
                        .WithMany("Barcodes")
                        .HasForeignKey("ShelfTenanttenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ShelfTenant");
                });

            modelBuilder.Entity("ReolMarkedet.Domain.Entities.Payout", b =>
                {
                    b.HasOne("ReolMarkedet.Domain.Entities.ShelfTenant", "ShelfTenant")
                        .WithMany("Payouts")
                        .HasForeignKey("ShelfTenanttenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ShelfTenant");
                });

            modelBuilder.Entity("ReolMarkedet.Domain.Entities.ShelfTenant", b =>
                {
                    b.Navigation("Barcodes");

                    b.Navigation("Payouts");
                });
#pragma warning restore 612, 618
        }
    }
}
